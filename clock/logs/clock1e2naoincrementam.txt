Relógios se comunicam.
Relógio 0 não consegue ouvir de relógio 1 e 2.
    - Possível discussão: primeiro fazer a conexão entre todos os relógios, depois a troca de mensagens.
Relógio 0 consegue enviar seu vetor para relógios 1 e 2.
Relógios 1 e 2 conseguem receber o vetor do relógio 0.

Relógio 1:

Meu valor: 29 - [13, 29, 23]
Enviando para: 127.0.0.1, 12347, [13, 29, 23]
Conexão recebida de ('127.0.0.1', 51588)
Recebido: [13, 24, 27]
Meu valor: 30 - [13, 30, 27]
[13, 31, 27]
Dentro do drift.
Dentro do drift_event.lock.
Vou ajustar o tempo de tick.
Conexão recebida de ('127.0.0.1', 51592)
Recebido: [14, 0, 0]
Meu valor: 31 - [13, 31, 27]
Meu valor: 32 - [14, 32, 27]
Enviando para: 127.0.0.1, 12346, [14, 33, 27]

Relógio 2:

Recebido: [13, 29, 23]
Meu valor: 27 - [13, 29, 27]
[13, 29, 28]
Dentro do drift.
Dentro do drift_event.lock.
Vou ajustar o tempo de tick.
Meu valor: 28 - [13, 29, 28]
Enviando para: 127.0.0.1, 12347, [13, 24, 27]
Conexão recebida de ('127.0.0.1', 51446)
Recebido: [13, 24, 27]
Conexão recebida de ('127.0.0.1', 51460)
Recebido: [14, 0, 0]
Meu valor: 29 - [13, 29, 29]
Meu valor: 30 - [14, 29, 30]
[14, 29, 31]
Dentro do drift.
Dentro do drift_event.lock.
Vou ajustar o tempo de tick.
Meu valor: 31 - [14, 29, 31]
Enviando para: 127.0.0.1, 12346, [14, 29, 32]

Embora relógios 1 e 2 consigam se comunicar, está dando conflito na comunicação de ambos.